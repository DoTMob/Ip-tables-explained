************************************************************
************************************************************
  _____        _     __  __       _     
 |  __ \      | |   |  \/  |     | |    
 | |  | | ___ | |_  | \  / | ___ | |__  
 | |  | |/ _ \| __| | |\/| |/ _ \| '_ \ 
 | |__| | (_) | |_  | |  | | (_) | |_) |
 |_____/ \___/ \__| |_|  |_|\___/|_.__/ 
                                        
                                        
************************************************************
Setting up the IP tables on a Linux based VPS. This is PHASE 1 of 5 docs on how to increase security on your VPN server  explained by 
***********************************

  ██████  ██▓     ██▓ ▄████▄  ▓█████ 
▒██    ▒ ▓██▒    ▓██▒▒██▀ ▀█  ▓█   ▀ 
░ ▓██▄   ▒██░    ▒██▒▒▓█    ▄ ▒███   
  ▒   ██▒▒██░    ░██░▒▓▓▄ ▄██▒▒▓█  ▄ 
▒██████▒▒░██████▒░██░▒ ▓███▀ ░░▒████▒
▒ ▒▓▒ ▒ ░░ ▒░▓  ░░▓  ░ ░▒ ▒  ░░░ ▒░ ░
░ ░▒  ░ ░░ ░ ▒  ░ ▒ ░  ░  ▒    ░ ░  ░
░  ░  ░    ░ ░    ▒ ░░           ░   
      ░      ░  ░ ░  ░ ░         ░  ░
                     ░               

***********************************

Executed by the root user running the bash or any other modern shell. Do not type commands on the remote system as it will disconnect your access... I’ve used RHEL 6.x, but the following command should work with any modern Linux distro that use the netfliter...


1. Displaying the Status of Your Firewall

# iptables -L -n -v

1.1  Shows the active firewall

# iptables -L -n -v
------------------------------------------------------------------explained---------below----------------------------------------------------------------------------
-L : List rules.
-v : Display detailed information. This option makes the list command show the interface name, the rule options, and the TOS masks. The packet and byte counters are also listed, with the suffix ‘K’, ‘M’ or ‘G’ for 1000, 1,000,000 and 1,000,000,000 multipliers respectively.
-n : Display IP address and port in numeric format. Do not use DNS to resolve names. This will speed up listing.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

1.1 To inspect firewall with line numbers, enter

# iptables -n -L -v --line-numbers

1.2. To display INPUT or OUTPUT chain rules, enter

# iptables -L INPUT -n -v

# iptables -L OUTPUT -n -v --line-numbers

2. Stop / Start / Restart the Firewall If you are using CentOS / RHEL / Fedora Linux, enter

# service iptables stop
# service iptables start
# service iptables restart

You can use the iptables command itself to stop the firewall and delete all rules:
# iptables -F
# iptables -X
# iptables -t nat -F
# iptables -t nat -X
# iptables -t mangle -F
# iptables -t mangle -X
# iptables -P INPUT ACCEPT
# iptables -P OUTPUT ACCEPT
# iptables -P FORWARD ACCEPT

-------------------explained------------below-----------------------------------
-F : Deleting (flushing) all the rules.
-X : Delete chain.
-t table_name : Select table (called nat or mangle) and delete/flush rules.
-P : Set the default policy (such as DROP, REJECT, or ACCEPT).
---------------------------------------------------------------------------------

3. Delete Firewall Rules

# iptables -L INPUT -n --line-numbers
# iptables -L OUTPUT -n --line-numbers
# iptables -L OUTPUT -n --line-numbers | less
# iptables -L OUTPUT -n --line-numbers | grep 202.54.1.1


3.1 To find source IP 202.54.1.1 and delete from rule:

# iptables -D INPUT -s 202.54.1.1 -j DROP

------explained------------below-----------------------
-D : Delete one or more rules from the selected chain
-------------------------------------------------------
4. Save Firewall Rules
To save firewall rules under CentOS / RHEL / Fedora Linux, enter:
# service iptables save

-------------------------------------------------------
___    __    __ _  _  __
 | |_||_    /  / \| \|_ 
 | | ||__   \__\_/|_/|__

A. GoD MoDe  (Set Drop all traffic)### you will not able to connect anywhere as all traffic is dropped ###
B. DEMI- GoD 
C. SAFE

------------------------------------------------------


A.
# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP
# iptables -L -v -n

B.
# iptables -P INPUT DROP
# iptables -P FORWARD DROP
# iptables -P OUTPUT ACCEPT
# iptables -A INPUT -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -L -v -n

C. customize
# iptables -A INPUT -s 1.2.3.4 -j DROP  (block any incoming IP address example)
# iptables -A INPUT -p tcp --dport 80 -j DROP (Block Incoming Port Requests (BLOCK PORT)
# iptables -A INPUT -i eth1 -p tcp --dport 80 -j DROP  (Block Incoming Port Requests - BLOCK PORT)
# iptables -A INPUT -p tcp -s 1.2.3.4 --dport 80 -j DROP (To block port 80 only for an ip address 1.2.3.4, enter)
----------------------------------------------------------
# iptables -A OUTPUT -d 75.126.153.206 -j DROP           |
or                                                       |
# iptables -A OUTPUT -d 192.168.1.0/24 -j DROP           ---->Block Outgoing IP Address
or                                                       |
# iptables -A OUTPUT -o eth1 -d 192.168.1.0/24 -j DROP   |
----------------------------------------------------------

---------------------------------------------------------|
# iptables -A OUTPUT -p tcp -d www.facebook.com -j DROP  |
# iptables -A OUTPUT -p tcp -d facebook.com -j DROP     ---->Block Outgoing URL Address
---------------------------------------------------------|




5.  Drop Private Network Address On Public Interface
IP spoofing is nothing but to stop the following IPv4 address ranges for private networks on your public interfaces. Packets with non-routable source addresses should be rejected using the following syntax:
# iptables -A INPUT -i eth1 -s 192.168.0.0/24 -j DROP
# iptables -A INPUT -i eth1 -s 10.0.0.0/8 -j DROP
# iptables -A INPUT -i eth1 -s 172.16.0.0/12 -j DROP
# iptables -A INPUT -i eth1 -s 224.0.0.0/4 -j DROP
# iptables -A INPUT -i eth1 -s 240.0.0.0/5 -j DROP
# iptables -A INPUT -i eth1 -s 127.0.0.0/8 -j DROP


6. [Log and Drop Packets] Type the following to log and block IP spoofing on public interface called eth1 with Limited Number of Log Entries
# iptables -A INPUT -i eth1 -s 10.0.0.0/8 -m limit --limit 5/m --limit-burst 7 -j LOG --log-prefix "IP_SPOOF A: "
# iptables -A INPUT -i eth1 -s 10.0.0.0/8 -j DROP


7. Drop or Accept Traffic From Mac Address Use the following syntax:
# iptables -A INPUT -m mac --mac-source 00:0F:EA:91:04:08 -j DROP
## *only accept traffic for TCP port # 8080 from mac 00:0F:EA:91:04:07 * ##
# iptables -A INPUT -p tcp --destination-port 22 -m mac --mac-source 00:0F:EA:91:04:07 -j ACCEPT

8.Block or Allow ICMP Ping Request Type the following command to block ICMP ping requests:
# iptables -A INPUT -p icmp --icmp-type echo-request -j DROP
# iptables -A INPUT -i eth1 -p icmp --icmp-type echo-request -j DROP

8.1 Ping responses can also be limited to certain networks or hosts:
# iptables -A INPUT -s 192.168.1.0/24 -p icmp --icmp-type echo-request -j ACCEPT

8.2 The following only accepts limited type of ICMP requests:
### ** assumed that default INPUT policy set to DROP ** #############
iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
iptables -A INPUT -p icmp --icmp-type destination-unreachable -j ACCEPT
iptables -A INPUT -p icmp --icmp-type time-exceeded -j ACCEPT
## ** all our server to respond to pings ** ##
iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT

9. Open ranges of PORTS
iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 7000:7010 -j ACCEPT

9.1 Open ranges of IP addresses ## only accept connection to tcp port 80 (Apache) if ip is between 192.168.1.100 and 192.168.1.200 ##
iptables -A INPUT -p tcp --destination-port 80 -m iprange --src-range 192.168.1.100-192.168.1.200 -j ACCEPT

9.2 Block or Open Common Ports

Replace ACCEPT with DROP to block port:
## open port ssh tcp port 22 ##
iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 22 -j ACCEPT
 
## open cups (printing service) udp/tcp port 631 for LAN users ##
iptables -A INPUT -s 192.168.1.0/24 -p udp -m udp --dport 631 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -p tcp -m tcp --dport 631 -j ACCEPT
 
## allow time sync via NTP for lan users (open udp port 123) ##
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p udp --dport 123 -j ACCEPT
 
## open tcp port 25 (smtp) for all ##
iptables -A INPUT -m state --state NEW -p tcp --dport 25 -j ACCEPT
 
# open dns server ports for all ##
iptables -A INPUT -m state --state NEW -p udp --dport 53 -j ACCEPT
iptables -A INPUT -m state --state NEW -p tcp --dport 53 -j ACCEPT
 
## open http/https (Apache) server port to all ##
iptables -A INPUT -m state --state NEW -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -m state --state NEW -p tcp --dport 443 -j ACCEPT
 
## open tcp port 110 (pop3) for all ##
iptables -A INPUT -m state --state NEW -p tcp --dport 110 -j ACCEPT
 
## open tcp port 143 (imap) for all ##
iptables -A INPUT -m state --state NEW -p tcp --dport 143 -j ACCEPT
 
## open access to Samba file server for lan users only ##
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 137 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 138 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 139 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 445 -j ACCEPT
 
## open access to proxy server for lan users only ##
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 3128 -j ACCEPT
 
## open access to mysql server for lan users only ##
iptables -I INPUT -p tcp --dport 3306 -j ACCEPT

9.3 redirect port AA to BB
# iptables -t nat -I PREROUTING --src 0/0 --dst 192.168.1.5 -p tcp --dport 80 -j REDIRECT --to-ports 8080


***************

___ _ ___  ____ 
 |  | |__] [__  
 |  | |    ___] 
                
***************

to reset packet counters
# iptables -L -n -v

To clear/reset the counters for all rules:
# iptables -Z
# iptables -L -n -v

Find out if ports are open or not, enter:
# netstat -tulpn

Display Tables rules
iptables --line-numbers -n -L


Type the following two commands to POWER firewall:

chkconfig iptables on
service iptables start
# restart the firewall
service iptables restart
# stop the firewall
service iptables stop

Log and Drop Spoofing Source Addresses
-A INPUT -i eth0 -s 10.0.0.0/8 -j LOG --log-prefix "IP DROP SPOOF "
-A INPUT -i eth0 -s 172.16.0.0/12 -j LOG --log-prefix "IP DROP SPOOF "
-A INPUT -i eth0 -s 192.168.0.0/16 -j LOG --log-prefix "IP DROP SPOOF "
-A INPUT -i eth0 -s 224.0.0.0/4 -j LOG --log-prefix "IP DROP MULTICAST "
-A INPUT -i eth0 -s 240.0.0.0/5 -j LOG --log-prefix "IP DROP SPOOF "
-A INPUT -i eth0 -d 127.0.0.0/8 -j LOG --log-prefix "IP DROP LOOPBACK "
-A INPUT -i eth0 -s 169.254.0.0/16  -j LOG --log-prefix "IP DROP MULTICAST "
-A INPUT -i eth0 -s 0.0.0.0/8  -j LOG --log-prefix "IP DROP "
-A INPUT -i eth0 -s  240.0.0.0/4  -j LOG --log-prefix "IP DROP "
-A INPUT -i eth0 -s  255.255.255.255/32  -j LOG --log-prefix "IP DROP  "
-A INPUT -i eth0 -s 168.254.0.0/16  -j LOG --log-prefix "IP DROP "
-A INPUT -i eth0 -s 248.0.0.0/5  -j LOG --log-prefix "IP DROP "

Log And Drop All Traffic
-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibited
COMMIT

Block Network Flood on Apache Port with IPtables
# iptables -A INPUT -p tcp --dport 80 -m limit --limit 100/minute --limit-burst 200 -j ACCEPT

--------------------------------------|
Save IPtables Rules to a File         |
# iptables-save > ~/iptables.rules    |
------------------------------------------>SO you can Restore IPtables Rules from a File like a restore point or backup
Restore IPtables Rules from a File    |
# iptables-restore < ~/iptables.rules |
______________________________________|


Allow Established and Related Connections
# iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

On Ubuntu, the easiest way to save iptables rules, so they will survive a reboot, is to use the iptables-persistent package. Install it with apt-get like this
sudo invoke-rc.d iptables-persistent save


Use SYNPROXY on all ports
#/sbin/iptables -t raw -D PREROUTING -p tcp -m tcp --syn -j CT --notrack #/sbin/iptables -D INPUT -p tcp -m tcp -m conntrack --ctstate INVALID,UNTRACKED -j SYNPROXY --sack-perm --timestamp --wscale 7 --mss 1460 #/sbin/iptables -D INPUT -m conntrack --ctstate INVALID -j DROP


SSH brute-force protection
/sbin/iptables -A INPUT -p tcp --dport ssh -m conntrack --ctstate NEW -m recent --set /sbin/iptables -A INPUT -p tcp --dport ssh -m conntrack --ctstate NEW -m recent --update --seconds 60 --hitcount 10 -j DROP


Protection against port scanning
/sbin/iptables -N port-scanning /sbin/iptables -A port-scanning -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 1/s --limit-burst 2 -j RETURN /sbin/iptables -A port-scanning -j DROP

XMAS Packet
# iptables -A INPUT -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP

Smurf Attack
# iptables -A INPUT -p icmp -m limit --limit 2/second --limit-burst 2 -j ACCEPT

SYN Flood
# iptables -A INPUT -p tcp -m state --state NEW -m limit --limit 2/second --limit-burst 2 -j ACCEPT


--------------------------------------------------------------------------------------------------------------------
for the user: try to config the tables that fits your needs. This .txt file was made to help create custom IPtables 
--------------------------------------------------------------------------------------------------------------------


